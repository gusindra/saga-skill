local loader = "#examples"

function init(self)
	msg.post(".", "acquire_input_focus")
	sound.play("go#jingle", {delay = 1, gain = 0.5, pan = -1.0, speed = 1.25})
end

function on_message(self, message_id, message, sender)
	--if message_id == hash("proxy_loaded") then
	--	msg.post(sender, "enable")
	--	msg.post("#examples", "disable")
	--end
	if message_id == hash("start_level") then
		-- some script tells us to start loading the level
		msg.post("#proxy", "load")
		-- store sender for later notification
		self.loader = sender
	elseif message_id == hash("proxy_loaded") then
		-- enable the collection and let the loader know
		msg.post(sender, "enable")
		msg.post(self.loader, message_id)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		if gui.pick_node(gui.get_node("basic_button"), action.x, action.y) then
			msg.post("#basicproxy", "async_load")
		elseif gui.pick_node(gui.get_node("ocean_button"), action.x, action.y) then
			msg.post("#oceanproxy", "async_load")
		end
	end
	if(action_id == hash("touch") and action.released == true) then
		local textBegin = gui.get_node("textBeginGame")
		if(gui.pick_node(textBegin,action.x,action.y)) then
			msg.post("loader:/go#loader", "start_game")
		elseif gui.pick_node(gui.get_node("basic_button"), action.x, action.y) then
			msg.post("loader:/go#loader", "basic_game")
		elseif gui.pick_node(gui.get_node("ocean_button"), action.x, action.y) then
			msg.post("loader:/go#loader", "start_game")
		end
	end
	if(action_id == hash("touch") and action.released == true) then
		local textExit = gui.get_node("textExitGame")
		if(gui.pick_node(textExit,action.x,action.y)) then
			msg.post("@system:", "exit", {code = 0})
		end
	end 
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
